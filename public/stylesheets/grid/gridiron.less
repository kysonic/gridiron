/**
 * Welcome to Gridiron. Small Css Grid for Less based on Skeleton
 * @author kysonic, @email soooyc@gmail.com
 */
@import 'bootstrap';
@import 'maker';

.b-container                        { position: relative; width: @baseLandscape+0px; margin: 0 auto; padding: 0;}
.b-container .column,
.b-container .columns               { float: left; display: inline; margin-left: @marginLeft+0px; margin-right: @marginLeft+0px; }
.b-row                              { margin-bottom: @marginLeft+0px*2; }

/* Nested Column Classes */
.column.alpha, .columns.alpha       { margin-left: 0; }
.column.omega, .columns.omega       { margin-right: 0; }

/* Base Grid */
.makeStyle(~".b-container @{columnClassName}",width,px,@unit,@colsCount,baseColumn);
/* Partials */
.b-container .col1-3                { width: (@unit*7)+20px; }
.b-container .col2-3                { width: (@unit*15)+20px; }
/* Offsets */
.makeStyle(~".b-container @{offsetClassName}",padding-left,px,@unit,@colsCount - 1,baseOffset);

// #Tablet (Portrait)
// ==================================================

// Note: Design for a width of 768px
@media only screen and (min-width: 768px) and (max-width: 959px) {
  .b-container                            { width: @tabletPortrait+0px; }
  .b-container .column,
  .b-container .columns                   { margin-left: @marginLeft+0px; margin-right: @marginRight;  }
  .column.alpha, .columns.alpha           { margin-left: 0; margin-right: @marginRight; }
  .column.omega, .columns.omega           { margin-right: 0; margin-left: @marginLeft+0px; }
  .alpha.omega                            { margin-left: 0; margin-right: 0; }

  /* Base Grid */
  .makeStyle(~".b-container @{columnClassName}",width,px,@tabletUnit,@colsCount,baseColumn);
  /* Partials */
  .b-container .col1-3                    { width: (@tabletUnit*7)+40px; }
  .b-container .col2-3                    { width: (@tabletUnit*15)+72px; }
  /* Offsets */
  .makeStyle(~".b-container @{offsetClassName}",padding-left,px,@tabletUnit,@colsCount - 1,baseOffset);
}


//  #Mobile (Portrait)
// ==================================================

// Note: Design for a width of 320px
@media only screen and (max-width: 767px) {
  .b-container { width: @mobilePortraitWidth+0px; }

  .b-container .columns,
  .b-container .column { margin-left: 0; }

  /* Base Grid */
  .makeStyle(~".b-container @{columnClassName}",width,px,@mobilePortraitWidth,@colsCount,empty);
  /* Partials */
  .b-container .col1-3,
  .b-container .col2-3  { width:@mobilePortraitWidth+0px; }
  /* Offsets */
  .makeStyle(~".b-container @{offsetClassName}",padding-left,px,0,@colsCount - 1,empty);

}


// #Mobile (Landscape)
// ==================================================

// Note: Design for a width of 480px
@media only screen and (min-width: 480px) and (max-width: 767px) {
  .b-container { width: @mobileLandscapeWidth+0px; }
  .b-container .columns,
  .b-container .column { margin-left: 0; }

  /* Base Grid */
  .makeStyle(~".b-container @{columnClassName}",width,px,@mobileLandscapeWidth,@colsCount,empty);
  /* Partials */
  .b-container .col1-3,
  .b-container .col2-3 { width: @mobileLandscapeWidth; }
  /* Offsets */
  .makeStyle(~".b-container @{offsetClassName}",padding-left,px,0,@colsCount - 1,empty);
}


// #Clearing
// ==================================================

// Self Clearing Goodness
.b-container:after { content: "\0020"; display: block; height: 0; clear: both; visibility: hidden; }

/* Use clearfix class on parent to clear nested columns,
or wrap each b-row of columns in a <div class="b-row"> */

.clearfix:before,
.clearfix:after,
.b-row:before,
.b-row:after {
  content: '\0020';
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}
.b-row:after,
.clearfix:after {
  clear: both;
}
.b-row,
.clearfix {
  zoom: 1;
}

/* You can also use a <br class="clear" /> to clear columns */
.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}
